{"ast":null,"code":"import { storage } from \"./config\";\nimport { uploadBytes, ref, getDownloadURL } from \"firebase/storage\";\nimport { v4 } from \"uuid\";\nexport function upImageFirebase(file) {\n  const imageRef = ref(storage, `products/${file.name + v4()}`);\n  return new Promise(resolve => {\n    if (file === undefined) resolve;\n    //create sub promise\n    uploadBytes(imageRef, file).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        let a = {\n          name: url\n        };\n        resolve(a);\n      });\n    });\n  });\n}","map":{"version":3,"names":["storage","uploadBytes","ref","getDownloadURL","v4","upImageFirebase","file","imageRef","name","Promise","resolve","undefined","then","snapshot","url","a"],"sources":["C:/Users/tuyen/Desktop/full_md6/fe_md6/src/firebase/Upfirebase.js"],"sourcesContent":["import {storage} from \"./config\";\r\nimport {uploadBytes,ref, getDownloadURL} from \"firebase/storage\";\r\nimport {v4} from \"uuid\";\r\n\r\nexport function upImageFirebase(file){\r\n    const imageRef = ref(storage, `products/${file.name + v4()}`)\r\n    return new Promise(resolve => {\r\n        if(file === undefined) resolve\r\n            //create sub promise\r\n            uploadBytes(imageRef, file).then((snapshot) => {\r\n                getDownloadURL(snapshot.ref).then(url => {\r\n                    let a = {name: url}\r\n                    resolve(a)\r\n                })\r\n            })\r\n    })\r\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,UAAU;AAChC,SAAQC,WAAW,EAACC,GAAG,EAAEC,cAAc,QAAO,kBAAkB;AAChE,SAAQC,EAAE,QAAO,MAAM;AAEvB,OAAO,SAASC,eAAeA,CAACC,IAAI,EAAC;EACjC,MAAMC,QAAQ,GAAGL,GAAG,CAACF,OAAO,EAAG,YAAWM,IAAI,CAACE,IAAI,GAAGJ,EAAE,CAAC,CAAE,EAAC,CAAC;EAC7D,OAAO,IAAIK,OAAO,CAACC,OAAO,IAAI;IAC1B,IAAGJ,IAAI,KAAKK,SAAS,EAAED,OAAO;IAC1B;IACAT,WAAW,CAACM,QAAQ,EAAED,IAAI,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;MAC3CV,cAAc,CAACU,QAAQ,CAACX,GAAG,CAAC,CAACU,IAAI,CAACE,GAAG,IAAI;QACrC,IAAIC,CAAC,GAAG;UAACP,IAAI,EAAEM;QAAG,CAAC;QACnBJ,OAAO,CAACK,CAAC,CAAC;MACd,CAAC,CAAC;IACN,CAAC,CAAC;EACV,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}